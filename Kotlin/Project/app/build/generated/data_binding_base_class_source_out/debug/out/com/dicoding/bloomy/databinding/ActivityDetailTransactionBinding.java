// Generated by view binder compiler. Do not edit!
package com.dicoding.bloomy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.bloomy.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailTransactionBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final MaterialButton button;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView idpem;

  @NonNull
  public final RelativeLayout layoutTextCount;

  @NonNull
  public final RelativeLayout layoutTextID;

  @NonNull
  public final RecyclerView listitem;

  @NonNull
  public final TextView ongkir;

  @NonNull
  public final TextView outputDate;

  @NonNull
  public final TextView outputOngkir;

  @NonNull
  public final TextView outputStatus;

  @NonNull
  public final TextView outputSubtotal;

  @NonNull
  public final TextView outputText;

  @NonNull
  public final TextView outputTotal;

  @NonNull
  public final View rectangle;

  @NonNull
  public final TextView status;

  @NonNull
  public final TextView subtotal;

  @NonNull
  public final TextView title;

  @NonNull
  public final Toolbar toolbar;

  @NonNull
  public final TextView toolbarTitle;

  @NonNull
  public final TextView total;

  private ActivityDetailTransactionBinding(@NonNull ScrollView rootView,
      @NonNull ImageView backButton, @NonNull MaterialButton button, @NonNull FrameLayout container,
      @NonNull TextView date, @NonNull TextView idpem, @NonNull RelativeLayout layoutTextCount,
      @NonNull RelativeLayout layoutTextID, @NonNull RecyclerView listitem,
      @NonNull TextView ongkir, @NonNull TextView outputDate, @NonNull TextView outputOngkir,
      @NonNull TextView outputStatus, @NonNull TextView outputSubtotal,
      @NonNull TextView outputText, @NonNull TextView outputTotal, @NonNull View rectangle,
      @NonNull TextView status, @NonNull TextView subtotal, @NonNull TextView title,
      @NonNull Toolbar toolbar, @NonNull TextView toolbarTitle, @NonNull TextView total) {
    this.rootView = rootView;
    this.backButton = backButton;
    this.button = button;
    this.container = container;
    this.date = date;
    this.idpem = idpem;
    this.layoutTextCount = layoutTextCount;
    this.layoutTextID = layoutTextID;
    this.listitem = listitem;
    this.ongkir = ongkir;
    this.outputDate = outputDate;
    this.outputOngkir = outputOngkir;
    this.outputStatus = outputStatus;
    this.outputSubtotal = outputSubtotal;
    this.outputText = outputText;
    this.outputTotal = outputTotal;
    this.rectangle = rectangle;
    this.status = status;
    this.subtotal = subtotal;
    this.title = title;
    this.toolbar = toolbar;
    this.toolbarTitle = toolbarTitle;
    this.total = total;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailTransactionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailTransactionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_detail_transaction, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailTransactionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backButton;
      ImageView backButton = ViewBindings.findChildViewById(rootView, id);
      if (backButton == null) {
        break missingId;
      }

      id = R.id.button;
      MaterialButton button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.idpem;
      TextView idpem = ViewBindings.findChildViewById(rootView, id);
      if (idpem == null) {
        break missingId;
      }

      id = R.id.layoutTextCount;
      RelativeLayout layoutTextCount = ViewBindings.findChildViewById(rootView, id);
      if (layoutTextCount == null) {
        break missingId;
      }

      id = R.id.layoutTextID;
      RelativeLayout layoutTextID = ViewBindings.findChildViewById(rootView, id);
      if (layoutTextID == null) {
        break missingId;
      }

      id = R.id.listitem;
      RecyclerView listitem = ViewBindings.findChildViewById(rootView, id);
      if (listitem == null) {
        break missingId;
      }

      id = R.id.ongkir;
      TextView ongkir = ViewBindings.findChildViewById(rootView, id);
      if (ongkir == null) {
        break missingId;
      }

      id = R.id.outputDate;
      TextView outputDate = ViewBindings.findChildViewById(rootView, id);
      if (outputDate == null) {
        break missingId;
      }

      id = R.id.outputOngkir;
      TextView outputOngkir = ViewBindings.findChildViewById(rootView, id);
      if (outputOngkir == null) {
        break missingId;
      }

      id = R.id.outputStatus;
      TextView outputStatus = ViewBindings.findChildViewById(rootView, id);
      if (outputStatus == null) {
        break missingId;
      }

      id = R.id.outputSubtotal;
      TextView outputSubtotal = ViewBindings.findChildViewById(rootView, id);
      if (outputSubtotal == null) {
        break missingId;
      }

      id = R.id.outputText;
      TextView outputText = ViewBindings.findChildViewById(rootView, id);
      if (outputText == null) {
        break missingId;
      }

      id = R.id.outputTotal;
      TextView outputTotal = ViewBindings.findChildViewById(rootView, id);
      if (outputTotal == null) {
        break missingId;
      }

      id = R.id.rectangle;
      View rectangle = ViewBindings.findChildViewById(rootView, id);
      if (rectangle == null) {
        break missingId;
      }

      id = R.id.status;
      TextView status = ViewBindings.findChildViewById(rootView, id);
      if (status == null) {
        break missingId;
      }

      id = R.id.subtotal;
      TextView subtotal = ViewBindings.findChildViewById(rootView, id);
      if (subtotal == null) {
        break missingId;
      }

      id = R.id.title;
      TextView title = ViewBindings.findChildViewById(rootView, id);
      if (title == null) {
        break missingId;
      }

      id = R.id.toolbar;
      Toolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      id = R.id.toolbar_title;
      TextView toolbarTitle = ViewBindings.findChildViewById(rootView, id);
      if (toolbarTitle == null) {
        break missingId;
      }

      id = R.id.total;
      TextView total = ViewBindings.findChildViewById(rootView, id);
      if (total == null) {
        break missingId;
      }

      return new ActivityDetailTransactionBinding((ScrollView) rootView, backButton, button,
          container, date, idpem, layoutTextCount, layoutTextID, listitem, ongkir, outputDate,
          outputOngkir, outputStatus, outputSubtotal, outputText, outputTotal, rectangle, status,
          subtotal, title, toolbar, toolbarTitle, total);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
