// Generated by view binder compiler. Do not edit!
package com.dicoding.bloomy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.bloomy.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFishPricingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final BottomNavigationView bottomNavigation;

  @NonNull
  public final MaterialButton buttonpricing;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final TextInputLayout fishSpecies;

  @NonNull
  public final TextInputLayout grade;

  @NonNull
  public final TextInputEditText gradeText;

  @NonNull
  public final TextInputLayout seasonality;

  @NonNull
  public final TextInputEditText seasonalityText;

  @NonNull
  public final TextInputEditText speciesText;

  @NonNull
  public final TextInputLayout sustainability;

  @NonNull
  public final TextInputEditText sustainabilityText;

  @NonNull
  public final TextView titleText;

  @NonNull
  public final RelativeLayout whiteBox;

  private ActivityFishPricingBinding(@NonNull ConstraintLayout rootView,
      @NonNull BottomNavigationView bottomNavigation, @NonNull MaterialButton buttonpricing,
      @NonNull FrameLayout container, @NonNull TextInputLayout fishSpecies,
      @NonNull TextInputLayout grade, @NonNull TextInputEditText gradeText,
      @NonNull TextInputLayout seasonality, @NonNull TextInputEditText seasonalityText,
      @NonNull TextInputEditText speciesText, @NonNull TextInputLayout sustainability,
      @NonNull TextInputEditText sustainabilityText, @NonNull TextView titleText,
      @NonNull RelativeLayout whiteBox) {
    this.rootView = rootView;
    this.bottomNavigation = bottomNavigation;
    this.buttonpricing = buttonpricing;
    this.container = container;
    this.fishSpecies = fishSpecies;
    this.grade = grade;
    this.gradeText = gradeText;
    this.seasonality = seasonality;
    this.seasonalityText = seasonalityText;
    this.speciesText = speciesText;
    this.sustainability = sustainability;
    this.sustainabilityText = sustainabilityText;
    this.titleText = titleText;
    this.whiteBox = whiteBox;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFishPricingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFishPricingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_fish_pricing, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFishPricingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_navigation;
      BottomNavigationView bottomNavigation = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigation == null) {
        break missingId;
      }

      id = R.id.buttonpricing;
      MaterialButton buttonpricing = ViewBindings.findChildViewById(rootView, id);
      if (buttonpricing == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.fishSpecies;
      TextInputLayout fishSpecies = ViewBindings.findChildViewById(rootView, id);
      if (fishSpecies == null) {
        break missingId;
      }

      id = R.id.grade;
      TextInputLayout grade = ViewBindings.findChildViewById(rootView, id);
      if (grade == null) {
        break missingId;
      }

      id = R.id.gradeText;
      TextInputEditText gradeText = ViewBindings.findChildViewById(rootView, id);
      if (gradeText == null) {
        break missingId;
      }

      id = R.id.seasonality;
      TextInputLayout seasonality = ViewBindings.findChildViewById(rootView, id);
      if (seasonality == null) {
        break missingId;
      }

      id = R.id.seasonalityText;
      TextInputEditText seasonalityText = ViewBindings.findChildViewById(rootView, id);
      if (seasonalityText == null) {
        break missingId;
      }

      id = R.id.speciesText;
      TextInputEditText speciesText = ViewBindings.findChildViewById(rootView, id);
      if (speciesText == null) {
        break missingId;
      }

      id = R.id.sustainability;
      TextInputLayout sustainability = ViewBindings.findChildViewById(rootView, id);
      if (sustainability == null) {
        break missingId;
      }

      id = R.id.sustainabilityText;
      TextInputEditText sustainabilityText = ViewBindings.findChildViewById(rootView, id);
      if (sustainabilityText == null) {
        break missingId;
      }

      id = R.id.titleText;
      TextView titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      id = R.id.white_box;
      RelativeLayout whiteBox = ViewBindings.findChildViewById(rootView, id);
      if (whiteBox == null) {
        break missingId;
      }

      return new ActivityFishPricingBinding((ConstraintLayout) rootView, bottomNavigation,
          buttonpricing, container, fishSpecies, grade, gradeText, seasonality, seasonalityText,
          speciesText, sustainability, sustainabilityText, titleText, whiteBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
