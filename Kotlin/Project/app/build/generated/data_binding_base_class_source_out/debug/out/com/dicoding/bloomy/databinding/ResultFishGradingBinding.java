// Generated by view binder compiler. Do not edit!
package com.dicoding.bloomy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.dicoding.bloomy.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ResultFishGradingBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final TextView TextViewb;

  @NonNull
  public final BottomNavigationView bottomNavigationb;

  @NonNull
  public final FrameLayout container;

  @NonNull
  public final TextInputLayout grade;

  @NonNull
  public final TextInputEditText gradeText;

  @NonNull
  public final TextInputLayout information;

  @NonNull
  public final TextInputEditText informationtext;

  @NonNull
  public final MaterialButton morebuttongrading;

  @NonNull
  public final CardView uploadCardb;

  @NonNull
  public final ImageView uploadIconb;

  @NonNull
  public final TextView uploadTextb;

  @NonNull
  public final ImageView uploadedImageb;

  @NonNull
  public final RelativeLayout whiteBox;

  private ResultFishGradingBinding(@NonNull RelativeLayout rootView, @NonNull TextView TextViewb,
      @NonNull BottomNavigationView bottomNavigationb, @NonNull FrameLayout container,
      @NonNull TextInputLayout grade, @NonNull TextInputEditText gradeText,
      @NonNull TextInputLayout information, @NonNull TextInputEditText informationtext,
      @NonNull MaterialButton morebuttongrading, @NonNull CardView uploadCardb,
      @NonNull ImageView uploadIconb, @NonNull TextView uploadTextb,
      @NonNull ImageView uploadedImageb, @NonNull RelativeLayout whiteBox) {
    this.rootView = rootView;
    this.TextViewb = TextViewb;
    this.bottomNavigationb = bottomNavigationb;
    this.container = container;
    this.grade = grade;
    this.gradeText = gradeText;
    this.information = information;
    this.informationtext = informationtext;
    this.morebuttongrading = morebuttongrading;
    this.uploadCardb = uploadCardb;
    this.uploadIconb = uploadIconb;
    this.uploadTextb = uploadTextb;
    this.uploadedImageb = uploadedImageb;
    this.whiteBox = whiteBox;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ResultFishGradingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ResultFishGradingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.result_fish_grading, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ResultFishGradingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TextViewb;
      TextView TextViewb = ViewBindings.findChildViewById(rootView, id);
      if (TextViewb == null) {
        break missingId;
      }

      id = R.id.bottom_navigationb;
      BottomNavigationView bottomNavigationb = ViewBindings.findChildViewById(rootView, id);
      if (bottomNavigationb == null) {
        break missingId;
      }

      id = R.id.container;
      FrameLayout container = ViewBindings.findChildViewById(rootView, id);
      if (container == null) {
        break missingId;
      }

      id = R.id.grade;
      TextInputLayout grade = ViewBindings.findChildViewById(rootView, id);
      if (grade == null) {
        break missingId;
      }

      id = R.id.gradeText;
      TextInputEditText gradeText = ViewBindings.findChildViewById(rootView, id);
      if (gradeText == null) {
        break missingId;
      }

      id = R.id.information;
      TextInputLayout information = ViewBindings.findChildViewById(rootView, id);
      if (information == null) {
        break missingId;
      }

      id = R.id.informationtext;
      TextInputEditText informationtext = ViewBindings.findChildViewById(rootView, id);
      if (informationtext == null) {
        break missingId;
      }

      id = R.id.morebuttongrading;
      MaterialButton morebuttongrading = ViewBindings.findChildViewById(rootView, id);
      if (morebuttongrading == null) {
        break missingId;
      }

      id = R.id.uploadCardb;
      CardView uploadCardb = ViewBindings.findChildViewById(rootView, id);
      if (uploadCardb == null) {
        break missingId;
      }

      id = R.id.uploadIconb;
      ImageView uploadIconb = ViewBindings.findChildViewById(rootView, id);
      if (uploadIconb == null) {
        break missingId;
      }

      id = R.id.uploadTextb;
      TextView uploadTextb = ViewBindings.findChildViewById(rootView, id);
      if (uploadTextb == null) {
        break missingId;
      }

      id = R.id.uploadedImageb;
      ImageView uploadedImageb = ViewBindings.findChildViewById(rootView, id);
      if (uploadedImageb == null) {
        break missingId;
      }

      id = R.id.white_box;
      RelativeLayout whiteBox = ViewBindings.findChildViewById(rootView, id);
      if (whiteBox == null) {
        break missingId;
      }

      return new ResultFishGradingBinding((RelativeLayout) rootView, TextViewb, bottomNavigationb,
          container, grade, gradeText, information, informationtext, morebuttongrading, uploadCardb,
          uploadIconb, uploadTextb, uploadedImageb, whiteBox);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
